import java.text.SimpleDateFormat

buildscript {
    repositories {
        mavenLocal()
        maven { url "https://repo.grails.org/grails/core" }
        mavenCentral()
    }
    dependencies {
        classpath "org.grails:grails-gradle-plugin:$grailsVersion"
    }
}

plugins {
    id 'org.asciidoctor.jvm.convert' version '3.2.0'
    id "org.asciidoctor.jvm.pdf" version "3.2.0"
    id "org.asciidoctor.jvm.epub" version "3.2.0"
    id "com.jfrog.artifactory" version "4.21.0"
}

version project.file("../version.txt").text.trim()
group "org.grails.plugins"

apply plugin: "eclipse"
apply plugin: "idea"
apply plugin: "org.grails.grails-plugin"
apply plugin: "org.grails.grails-plugin-publish"
apply plugin: "org.grails.grails-gsp"

ext {
    grailsVersion = project.grailsVersion
    gradleWrapperVersion = project.gradleWrapperVersion
}

repositories {
    mavenLocal()
    mavenCentral()
    maven { url "https://repo.grails.org/grails/core" }
}

sourceCompatibility = targetCompatibility = 1.8

dependencies {
    profile "org.grails.profiles:web-plugin"

    provided 'org.springframework.boot:spring-boot-starter-logging'
    provided "org.springframework.boot:spring-boot-starter-actuator"
    provided "org.springframework.boot:spring-boot-autoconfigure"
    provided "org.springframework.boot:spring-boot-starter-tomcat"
    provided "org.grails:grails-web-boot"
    provided "org.grails:grails-core"
    provided "org.grails:grails-logging"
    provided "org.grails:grails-plugin-rest"
    provided "org.grails:grails-plugin-i18n"
    provided "org.grails:grails-plugin-services"
    provided "org.grails:grails-plugin-url-mappings"
    provided "org.grails:grails-plugin-interceptors"
    provided "org.grails.plugins:gsp"
    provided "org.grails:grails-console"
    provided "org.grails:grails-plugin-services"
    provided "org.grails:grails-plugin-domain-class"

    testCompile "org.grails:grails-gorm-testing-support"
    testCompile "org.grails:grails-web-testing-support"
}

bootJar.enabled = false

static String buildDate() {
    def df = new SimpleDateFormat("yyyy-MM-dd")
    df.setTimeZone(TimeZone.getTimeZone("UTC"))
    return df.format(new Date())
}

task wrapper(type: Wrapper) {
    gradleVersion = gradleWrapperVersion
}

apply from: "${rootProject.projectDir}/gradle/grailsPublish.gradle"
apply from: "${rootProject.projectDir}/gradle/artifactoryPublish.gradle"
apply from: "${rootProject.projectDir}/gradle/docs.gradle"




